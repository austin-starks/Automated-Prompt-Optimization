To find the 10 stocks with the lowest (positive) price to free cash flow ratio, we need to:
1. Generate as many subqueries as needed to organize information.
2. Repeat step 1 as many times as needed.
3. Join the `price_data` and `stockindustries` tables to list all of the fields including the date field(s) for `stockindustries` (if applicable), the date field(s) for `price_data` (if applicable). Remember, if you're doing a calculation, write out each field. Note: we may need to use subqueries for complex queries.
4. Perform calculations if necessary.
5. Perform filters as necessary.
6. Group stocks if necessary (most commonly to avoid duplicates).
8. Add additional filters or blocks to avoid common errors (like division by zero).
9. Limit the number of results (or use a default).
10. Include all of the dates/values used in the calculation.
Now I will generate the query:
{
  "sql": "WITH latest_data AS (SELECT symbol, MAX(date) AS max_date FROM `my_project.my_dataset.price_data` GROUP BY symbol) SELECT pd.symbol, si.name, pd.date, pd.priceToFreeCashFlowTTM FROM `my_project.my_dataset.price_data` pd JOIN latest_data ld ON pd.symbol = ld.symbol AND pd.date = ld.max_date JOIN `my_project.my_dataset.stockindustries` si ON pd.symbol = si.symbol WHERE pd.priceToFreeCashFlowTTM > 0 ORDER BY pd.priceToFreeCashFlowTTM ASC LIMIT 10"
}